apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy: 
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - image: {{ .Values.dockerImage }}:{{ .Values.dockerImageTag }}
        name: {{ .Chart.Name }}
        args: ["--dbpath", "/data/db"]
        livenessProbe:
          exec:
            command:
              - mongosh
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 60
          successThreshold: 1
          failureThreshold: 2
        readinessProbe:
          exec:
            command:
              - mongosh
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 2
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}-creds
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}-creds
              key: password
        volumeMounts:
        - name: "{{ .Chart.Name }}-data-dir"
          mountPath: "/data/db"
      volumes:
      - name: "{{ .Chart.Name }}-data-dir"
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-pvc"
